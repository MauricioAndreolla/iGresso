<% 


getAVGReview = (reviewArray) =>{
    let sum = 0
    for(let i in reviewArray) {
        sum += reviewArray[i].likes;
    }
    return Math.floor(sum/reviewArray.length);
}

getRatingStars = (rating) =>{
    var starArray = []
    for (let index = 1; index <= 5; index++) {
        if(index <= rating)
            starArray.push('<i class="fa-solid fa-star marked"></i>');
        else
            starArray.push('<i class="fa-solid fa-star"></i>');
    }
    return starArray.join("");
}


formatDate = (date) =>{

    if(!date)
        return "-";
    const d  = date.getDate().toString().padStart(2, '0');
    const m  = (date.getMonth()+1).toString().padStart(2, '0');
    const y  = date.getFullYear();
    return `${d}/${m}/${y}`;
}

formatDate2 = (date) =>{

    if(!date)
        return "-";
    const d  = (date.getDate()+1).toString().padStart(2, '0');
    const m  = (date.getMonth()+1).toString().padStart(2, '0');
    const y  = date.getFullYear();
    return `${d}/${m}/${y}`;
}

formatHour = (date) =>{

    if(!date)
        return "-";
    const h  = date.getHours().toString().padStart(2, '0');
    const m  = (date.getMinutes()).toString().padStart(2, '0');
    return `${h}:${m}`;
}

 getRatingClass = (rating) =>{
    var rating_class = "pg-none";

    if(rating){
        switch (rating) {
            case 'L':
                rating_class = 'pg-livre';
                break;
            case '10':
                rating_class = 'pg-10';
                break;
            case '12':
                rating_class = 'pg-12';
            break;
            case '14':
                rating_class = 'pg-14';
            break;
            case '16':
                rating_class = 'pg-16';
            break;
            case '18':
                rating_class = 'pg-18';
            break;
            default:
                rating_class = 'pg-empty';
            break;
        }
    }
    return rating_class;
}

groupSeats = (arraySeats) => {
    var result_array = [];
    for(var i = 0; i < arraySeats.length; i++){
        var letter = arraySeats[i].identificacao[0];
        var fitem = result_array.find(s => s.letter == letter);
        if(fitem){
            fitem.Seats.push(arraySeats[i]);
        }
        else{
            result_array.push({letter: letter, Seats:[arraySeats[i]] });
        }
    }

    return result_array.sort((a,b) => (a.letter > b.letter) ? 1 : ((b.letter > a.letter) ? -1 : 0));

}


%> 